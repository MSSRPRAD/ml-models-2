# -*- coding: utf-8 -*-
"""Naive Bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XOAYYsWZqXhJ1BqQJtW-b1BvkGFjRApI
"""
import sys
sys.path.append("..")
import pandas as pd
import numpy as np
from classes.NaiveBayes import NaiveBayes
import seaborn as sns
import matplotlib.pyplot as plt


column_names = ["age", "workclass", "fnlwgt", "education", "education-num", "marital-status", "occupation", "relationship", "race", "sex", "capital-gain", "capital-loss", "hours-per-week", "native-country", "salary"]

data = pd.read_csv("adult.csv", names=column_names)

replace_values = {" <=50K":"1", " >=50K":"-1", " >50K":"-1", " <50K":"1"}
# data.drop(['fnlwgt'], axis=1, inplace=True)

data['salary'] = data['salary'].replace(replace_values)
# strip whitespace before and after first and last character for all columns
data = data.applymap(lambda x: x.strip() if isinstance(x, str) else x)
data['fnlwgt'] = pd.cut(data['fnlwgt'], 5,labels=["1", "2", "3", "4", "5"])
# data.drop(['fnlwgt'], axis=1,inplace=True)
data['capital-gain'] = pd.cut(data['capital-gain'], 5,labels=["1", "2", "3", "4", "5"])
data['capital-loss'] = pd.cut(data['capital-loss'], 2,labels=["1", "2"])
data['hours-per-week'] = pd.cut(data['hours-per-week'], 5,labels=["1", "2", "3", "4", "5"])
# data.drop(['fnlwgt', 'capital-gain', 'capital-loss', 'hours-per-week'], inplace=True, axis=1)

# replace '?' with NaN
data = data.replace('?', np.nan)
data.isna().sum().sum()
data.dropna(inplace=True)

train = data.iloc[:20100, :]
test = data.iloc[20101:, :]
y = train['salary']
train = train.drop(['salary'], axis=1)

naive_bayes = NaiveBayes()
naive_bayes.fit(train, y)

test_y = test['salary']
test = test.drop(['salary'], axis=1)

naive_bayes.test(test, test_y)
metrics = [naive_bayes.acc, naive_bayes.prec, naive_bayes.rec]
metrics = pd.Series(metrics,index=['Accuracy','Precision','Recall'])
print(metrics)
metrics.to_csv("./data/naive-bayes/metrics.csv", header=False)
confusion = naive_bayes.confusion
confusion = pd.DataFrame(confusion)
confusion.to_csv("./data/naive-bayes/confusion.csv")
